import java.util.ArrayList;
import java.util.Scanner;

public class CoffeeGUI extends CoffeeShop {
    
    Scanner kbScanner = new Scanner(System.in);
    
    int select;


    // Create a method for selecting choices from a Menu
    public int select(int num) {
        int selection;
    
        do {
            selection = kbScanner.nextInt();
    
            if (selection > num || selection < 1) {
                System.out.println("Invalid selection. Please select again choosing a number corresponding to the choices");
            }
    
        } while (selection > num || selection < 1);
    
        return selection;
    }


    // Create Start and selecting options


        public void start(){



            System.out.println("Welcome to CoffeeGUI. Please make a selection below");
            System.out.println("1. Place an order");
            System.out.println("2. Access loyalty and members");
            System.out.println("3. Change and Update Menu");
            System.out.println("4. Check and Update BOH");

            select = this.select(4);

            switch(select){
                case 1:
                this.placeOrder();
                break;

                case 2:
                this.accessLoyalty();
                break;

                case 3:
                this.changeMenu();
                break;

                case 4:
                this.checkBOH();
                break;
            }

        }

        //GROUP
        private void placeOrder() {

        }


        //GROUP
        private void changeMenu(){

        }


        // JOHN BLAKE 
       private void accessLoyalty() {
            System.out.println("1. Add member");
            System.out.println("2. How many loyalty points do you have?");
            System.out.println("3. Are you a loyalty member?");
            System.out.println("4. Does customer have a reward?");

          select = this.select(4);

            switch(select){
                case 1: 
                this.addmember();
                break; 
                
                case 2:
                this.lookupPoints();
                break;
                
                case 3:
                this.isLoyaltyMem();
                break;
                    	
            	case 4:
            	this.hasReward();
            	break;
            }
        
        }

        public void addmember(){
        	
        	
        	System.out.println("Enter phone number (no dashes or spaces):");
        	String p = kbScanner.next();
        	
        	members.put(p,0);
        	
        	System.out.println("New member added!");
        	System.out.println();
        	
        	this.start();
        	
        	
        	
        }
        //new member from lookup	    	
        public  void addmember(String p){ 	
        	
        	members.put(p, 0);
        	  	
        }
        
        //new member from purchase
        public  void addmember(String p, int a){ 	
        	
        	members.put(p, a);
        	  	
        }



        public  void lookupPoints(){
        	System.out.println("Enter phone number (no dashes or spaces):");
        	String p = kbScanner.next();
        	
        	if(members.containsKey(p)) {
        		 System.out.println("This customer has" + members.get(p) +"points");
        	} else {
        		System.out.println("This customer is not signed up for loyalty points.");
        		System.out.println("Would you like to join the loyalty progrmam? (Y/N)");
        		
        		String s = kbScanner.next();
        		if (s.equalsIgnoreCase("Y")) {
            		
            		this.addmember(p,0);
            		 
            	} else if (kbScanner.next().equalsIgnoreCase("N")){
            		
            		System.out.print("Ok.");
            		
            		 
            	} else {
            		
            		System.out.println("invalid input.");
                	
            	}

        	}
        	
        	
      
      
        }
        
        
        public  void isLoyaltyMem() {
        	
        	System.out.println("Enter phone number (no dashes or spaces):");
        	String p = kbScanner.next();
        	
        	if(members.containsKey(p)) {
        		System.out.println("You are a loyalty member");
        	} else {
        		System.out.println("This customer is not signed up for loyalty points.");
        		System.out.println("Would you like to join the loyalty progrmam? (Y/N)");
        		
        		String s = kbScanner.next();
        		if (s.equalsIgnoreCase("Y")) {
            		
            		this.addmember(p,0);
            		 
            	} else if (kbScanner.next().equalsIgnoreCase("N")){
            		
            		System.out.print("Ok.");
            	}	
        	}
        	
        }
        	
        
        
        public  void hasReward() {
        	System.out.println("Enter phone number (no dashes or spaces):");
        	String id = kbScanner.next();
        	
        	if(members.get(id) >= 10) {
        		System.out.println("You have a reward!");
        	} else if (members.get(id) < 10) {
        		System.out.println("You are " + (10 - members.get(id)) + " points away from a reward.");
        	} else {
        		System.out.println("invalid input");
        	}
        		
        	
        	
        }

        

        //JACK HALEY. Checking BOH
        private void checkBOH(){
            System.out.println("1. Update Current Inventory");
            System.out.println("2. Monitor Day Progress");
            System.out.println("3. Check Inventory");
        
            select = this.select(3);

            switch(select){ 
            case 1:
                this.updateInv();
            break;
                
            case 2:
            this.monitor();
            break;

            case 3:
                this.ingredientStatus(ingredients);
            break;
            }
        }

            // Option 1 for Checking BOH
            public void updateInv(){

                System.out.println("1. Add New Ingredient");
                System.out.println("2. Change Current Ingredient Limit");
                System.out.println("3. Drop Ingredient");

                select = this.select(3);

                switch(select){
                    case 1:
                    System.out.println("Please enter the following one at a time: ingredient name, cost, and limit");
                    String newName = kbScanner.nextLine();
                    Ingredient newIngredient = new Ingredient(newName, kbScanner.nextDouble(), kbScanner.nextInt());
                    ingredients.add(newIngredient);
                    break;

                    case 2:
                    System.out.println("Please enter the name of the ingredient you would like to change the limit for and the new limit");
                    
                }

            }












    // print out the current status of each ingredient

    
    public void ingredientStatus(ArrayList<Ingredient> ingredients){
        for (Ingredient i : ingredients) {
            System.out.println("Ingredient: " + i.getName());
            System.out.println("Status: " + i.getStatus());
            System.out.println("Cost: $" + i.getCost());
            System.out.println("Limit: " + i.getLimit());
            System.out.println("Amount: " + i.getAmount());
         }
    }


}
